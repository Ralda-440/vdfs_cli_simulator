// Code generated from FileSysCLI.g4 by ANTLR 4.13.1. DO NOT EDIT.

package Parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type FileSysCLILexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var FileSysCLILexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func filesysclilexerLexerInit() {
	staticData := &FileSysCLILexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'execute'", "'mkdisk'", "'rmdisk'", "'fdisk'", "'mount'", "'unmount'",
		"'mkfs'", "'login'", "'logout'", "'mkgrp'", "'rmgrp'", "'mkusr'", "'rmusr'",
		"'mkfile'", "'rep'", "'cat'", "'remove'", "'edit'", "'rename'", "'mkdir'",
		"'pause'", "'chgrp'", "'move'", "'loss'", "'recovery'", "'chown'", "'chmod'",
		"'='",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "ENBLANCO", "LINE_COMMENT",
		"STRING", "QUOTED_TEXT_",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "ENBLANCO", "LINE_COMMENT", "STRING", "QUOTED_TEXT",
		"QUOTED_TEXT_ITEM", "QUOTED_TEXT_", "QUOTED_TEXT_ITEM_",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 32, 276, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
		1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7,
		1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11,
		1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1,
		20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22,
		1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1,
		24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25,
		1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1,
		27, 1, 28, 4, 28, 242, 8, 28, 11, 28, 12, 28, 243, 1, 28, 1, 28, 1, 29,
		1, 29, 5, 29, 250, 8, 29, 10, 29, 12, 29, 253, 9, 29, 1, 29, 1, 29, 1,
		30, 1, 30, 3, 30, 259, 8, 30, 1, 30, 1, 30, 1, 31, 4, 31, 264, 8, 31, 11,
		31, 12, 31, 265, 1, 32, 1, 32, 1, 33, 4, 33, 271, 8, 33, 11, 33, 12, 33,
		272, 1, 34, 1, 34, 0, 0, 35, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7,
		15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33,
		17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51,
		26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 0, 65, 0, 67, 32, 69, 0,
		1, 0, 4, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 10, 10, 13, 13, 3, 0, 9, 10,
		13, 13, 34, 34, 5, 0, 9, 10, 13, 13, 32, 32, 34, 34, 61, 61, 277, 0, 1,
		1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9,
		1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0,
		17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0,
		0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0,
		0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0,
		0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1,
		0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55,
		1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0,
		67, 1, 0, 0, 0, 1, 71, 1, 0, 0, 0, 3, 79, 1, 0, 0, 0, 5, 86, 1, 0, 0, 0,
		7, 93, 1, 0, 0, 0, 9, 99, 1, 0, 0, 0, 11, 105, 1, 0, 0, 0, 13, 113, 1,
		0, 0, 0, 15, 118, 1, 0, 0, 0, 17, 124, 1, 0, 0, 0, 19, 131, 1, 0, 0, 0,
		21, 137, 1, 0, 0, 0, 23, 143, 1, 0, 0, 0, 25, 149, 1, 0, 0, 0, 27, 155,
		1, 0, 0, 0, 29, 162, 1, 0, 0, 0, 31, 166, 1, 0, 0, 0, 33, 170, 1, 0, 0,
		0, 35, 177, 1, 0, 0, 0, 37, 182, 1, 0, 0, 0, 39, 189, 1, 0, 0, 0, 41, 195,
		1, 0, 0, 0, 43, 201, 1, 0, 0, 0, 45, 207, 1, 0, 0, 0, 47, 212, 1, 0, 0,
		0, 49, 217, 1, 0, 0, 0, 51, 226, 1, 0, 0, 0, 53, 232, 1, 0, 0, 0, 55, 238,
		1, 0, 0, 0, 57, 241, 1, 0, 0, 0, 59, 247, 1, 0, 0, 0, 61, 256, 1, 0, 0,
		0, 63, 263, 1, 0, 0, 0, 65, 267, 1, 0, 0, 0, 67, 270, 1, 0, 0, 0, 69, 274,
		1, 0, 0, 0, 71, 72, 5, 101, 0, 0, 72, 73, 5, 120, 0, 0, 73, 74, 5, 101,
		0, 0, 74, 75, 5, 99, 0, 0, 75, 76, 5, 117, 0, 0, 76, 77, 5, 116, 0, 0,
		77, 78, 5, 101, 0, 0, 78, 2, 1, 0, 0, 0, 79, 80, 5, 109, 0, 0, 80, 81,
		5, 107, 0, 0, 81, 82, 5, 100, 0, 0, 82, 83, 5, 105, 0, 0, 83, 84, 5, 115,
		0, 0, 84, 85, 5, 107, 0, 0, 85, 4, 1, 0, 0, 0, 86, 87, 5, 114, 0, 0, 87,
		88, 5, 109, 0, 0, 88, 89, 5, 100, 0, 0, 89, 90, 5, 105, 0, 0, 90, 91, 5,
		115, 0, 0, 91, 92, 5, 107, 0, 0, 92, 6, 1, 0, 0, 0, 93, 94, 5, 102, 0,
		0, 94, 95, 5, 100, 0, 0, 95, 96, 5, 105, 0, 0, 96, 97, 5, 115, 0, 0, 97,
		98, 5, 107, 0, 0, 98, 8, 1, 0, 0, 0, 99, 100, 5, 109, 0, 0, 100, 101, 5,
		111, 0, 0, 101, 102, 5, 117, 0, 0, 102, 103, 5, 110, 0, 0, 103, 104, 5,
		116, 0, 0, 104, 10, 1, 0, 0, 0, 105, 106, 5, 117, 0, 0, 106, 107, 5, 110,
		0, 0, 107, 108, 5, 109, 0, 0, 108, 109, 5, 111, 0, 0, 109, 110, 5, 117,
		0, 0, 110, 111, 5, 110, 0, 0, 111, 112, 5, 116, 0, 0, 112, 12, 1, 0, 0,
		0, 113, 114, 5, 109, 0, 0, 114, 115, 5, 107, 0, 0, 115, 116, 5, 102, 0,
		0, 116, 117, 5, 115, 0, 0, 117, 14, 1, 0, 0, 0, 118, 119, 5, 108, 0, 0,
		119, 120, 5, 111, 0, 0, 120, 121, 5, 103, 0, 0, 121, 122, 5, 105, 0, 0,
		122, 123, 5, 110, 0, 0, 123, 16, 1, 0, 0, 0, 124, 125, 5, 108, 0, 0, 125,
		126, 5, 111, 0, 0, 126, 127, 5, 103, 0, 0, 127, 128, 5, 111, 0, 0, 128,
		129, 5, 117, 0, 0, 129, 130, 5, 116, 0, 0, 130, 18, 1, 0, 0, 0, 131, 132,
		5, 109, 0, 0, 132, 133, 5, 107, 0, 0, 133, 134, 5, 103, 0, 0, 134, 135,
		5, 114, 0, 0, 135, 136, 5, 112, 0, 0, 136, 20, 1, 0, 0, 0, 137, 138, 5,
		114, 0, 0, 138, 139, 5, 109, 0, 0, 139, 140, 5, 103, 0, 0, 140, 141, 5,
		114, 0, 0, 141, 142, 5, 112, 0, 0, 142, 22, 1, 0, 0, 0, 143, 144, 5, 109,
		0, 0, 144, 145, 5, 107, 0, 0, 145, 146, 5, 117, 0, 0, 146, 147, 5, 115,
		0, 0, 147, 148, 5, 114, 0, 0, 148, 24, 1, 0, 0, 0, 149, 150, 5, 114, 0,
		0, 150, 151, 5, 109, 0, 0, 151, 152, 5, 117, 0, 0, 152, 153, 5, 115, 0,
		0, 153, 154, 5, 114, 0, 0, 154, 26, 1, 0, 0, 0, 155, 156, 5, 109, 0, 0,
		156, 157, 5, 107, 0, 0, 157, 158, 5, 102, 0, 0, 158, 159, 5, 105, 0, 0,
		159, 160, 5, 108, 0, 0, 160, 161, 5, 101, 0, 0, 161, 28, 1, 0, 0, 0, 162,
		163, 5, 114, 0, 0, 163, 164, 5, 101, 0, 0, 164, 165, 5, 112, 0, 0, 165,
		30, 1, 0, 0, 0, 166, 167, 5, 99, 0, 0, 167, 168, 5, 97, 0, 0, 168, 169,
		5, 116, 0, 0, 169, 32, 1, 0, 0, 0, 170, 171, 5, 114, 0, 0, 171, 172, 5,
		101, 0, 0, 172, 173, 5, 109, 0, 0, 173, 174, 5, 111, 0, 0, 174, 175, 5,
		118, 0, 0, 175, 176, 5, 101, 0, 0, 176, 34, 1, 0, 0, 0, 177, 178, 5, 101,
		0, 0, 178, 179, 5, 100, 0, 0, 179, 180, 5, 105, 0, 0, 180, 181, 5, 116,
		0, 0, 181, 36, 1, 0, 0, 0, 182, 183, 5, 114, 0, 0, 183, 184, 5, 101, 0,
		0, 184, 185, 5, 110, 0, 0, 185, 186, 5, 97, 0, 0, 186, 187, 5, 109, 0,
		0, 187, 188, 5, 101, 0, 0, 188, 38, 1, 0, 0, 0, 189, 190, 5, 109, 0, 0,
		190, 191, 5, 107, 0, 0, 191, 192, 5, 100, 0, 0, 192, 193, 5, 105, 0, 0,
		193, 194, 5, 114, 0, 0, 194, 40, 1, 0, 0, 0, 195, 196, 5, 112, 0, 0, 196,
		197, 5, 97, 0, 0, 197, 198, 5, 117, 0, 0, 198, 199, 5, 115, 0, 0, 199,
		200, 5, 101, 0, 0, 200, 42, 1, 0, 0, 0, 201, 202, 5, 99, 0, 0, 202, 203,
		5, 104, 0, 0, 203, 204, 5, 103, 0, 0, 204, 205, 5, 114, 0, 0, 205, 206,
		5, 112, 0, 0, 206, 44, 1, 0, 0, 0, 207, 208, 5, 109, 0, 0, 208, 209, 5,
		111, 0, 0, 209, 210, 5, 118, 0, 0, 210, 211, 5, 101, 0, 0, 211, 46, 1,
		0, 0, 0, 212, 213, 5, 108, 0, 0, 213, 214, 5, 111, 0, 0, 214, 215, 5, 115,
		0, 0, 215, 216, 5, 115, 0, 0, 216, 48, 1, 0, 0, 0, 217, 218, 5, 114, 0,
		0, 218, 219, 5, 101, 0, 0, 219, 220, 5, 99, 0, 0, 220, 221, 5, 111, 0,
		0, 221, 222, 5, 118, 0, 0, 222, 223, 5, 101, 0, 0, 223, 224, 5, 114, 0,
		0, 224, 225, 5, 121, 0, 0, 225, 50, 1, 0, 0, 0, 226, 227, 5, 99, 0, 0,
		227, 228, 5, 104, 0, 0, 228, 229, 5, 111, 0, 0, 229, 230, 5, 119, 0, 0,
		230, 231, 5, 110, 0, 0, 231, 52, 1, 0, 0, 0, 232, 233, 5, 99, 0, 0, 233,
		234, 5, 104, 0, 0, 234, 235, 5, 109, 0, 0, 235, 236, 5, 111, 0, 0, 236,
		237, 5, 100, 0, 0, 237, 54, 1, 0, 0, 0, 238, 239, 5, 61, 0, 0, 239, 56,
		1, 0, 0, 0, 240, 242, 7, 0, 0, 0, 241, 240, 1, 0, 0, 0, 242, 243, 1, 0,
		0, 0, 243, 241, 1, 0, 0, 0, 243, 244, 1, 0, 0, 0, 244, 245, 1, 0, 0, 0,
		245, 246, 6, 28, 0, 0, 246, 58, 1, 0, 0, 0, 247, 251, 5, 35, 0, 0, 248,
		250, 8, 1, 0, 0, 249, 248, 1, 0, 0, 0, 250, 253, 1, 0, 0, 0, 251, 249,
		1, 0, 0, 0, 251, 252, 1, 0, 0, 0, 252, 254, 1, 0, 0, 0, 253, 251, 1, 0,
		0, 0, 254, 255, 6, 29, 0, 0, 255, 60, 1, 0, 0, 0, 256, 258, 5, 34, 0, 0,
		257, 259, 3, 63, 31, 0, 258, 257, 1, 0, 0, 0, 258, 259, 1, 0, 0, 0, 259,
		260, 1, 0, 0, 0, 260, 261, 5, 34, 0, 0, 261, 62, 1, 0, 0, 0, 262, 264,
		3, 65, 32, 0, 263, 262, 1, 0, 0, 0, 264, 265, 1, 0, 0, 0, 265, 263, 1,
		0, 0, 0, 265, 266, 1, 0, 0, 0, 266, 64, 1, 0, 0, 0, 267, 268, 8, 2, 0,
		0, 268, 66, 1, 0, 0, 0, 269, 271, 3, 69, 34, 0, 270, 269, 1, 0, 0, 0, 271,
		272, 1, 0, 0, 0, 272, 270, 1, 0, 0, 0, 272, 273, 1, 0, 0, 0, 273, 68, 1,
		0, 0, 0, 274, 275, 8, 3, 0, 0, 275, 70, 1, 0, 0, 0, 6, 0, 243, 251, 258,
		265, 272, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// FileSysCLILexerInit initializes any static state used to implement FileSysCLILexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewFileSysCLILexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func FileSysCLILexerInit() {
	staticData := &FileSysCLILexerLexerStaticData
	staticData.once.Do(filesysclilexerLexerInit)
}

// NewFileSysCLILexer produces a new lexer instance for the optional input antlr.CharStream.
func NewFileSysCLILexer(input antlr.CharStream) *FileSysCLILexer {
	FileSysCLILexerInit()
	l := new(FileSysCLILexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &FileSysCLILexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "FileSysCLI.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// FileSysCLILexer tokens.
const (
	FileSysCLILexerT__0         = 1
	FileSysCLILexerT__1         = 2
	FileSysCLILexerT__2         = 3
	FileSysCLILexerT__3         = 4
	FileSysCLILexerT__4         = 5
	FileSysCLILexerT__5         = 6
	FileSysCLILexerT__6         = 7
	FileSysCLILexerT__7         = 8
	FileSysCLILexerT__8         = 9
	FileSysCLILexerT__9         = 10
	FileSysCLILexerT__10        = 11
	FileSysCLILexerT__11        = 12
	FileSysCLILexerT__12        = 13
	FileSysCLILexerT__13        = 14
	FileSysCLILexerT__14        = 15
	FileSysCLILexerT__15        = 16
	FileSysCLILexerT__16        = 17
	FileSysCLILexerT__17        = 18
	FileSysCLILexerT__18        = 19
	FileSysCLILexerT__19        = 20
	FileSysCLILexerT__20        = 21
	FileSysCLILexerT__21        = 22
	FileSysCLILexerT__22        = 23
	FileSysCLILexerT__23        = 24
	FileSysCLILexerT__24        = 25
	FileSysCLILexerT__25        = 26
	FileSysCLILexerT__26        = 27
	FileSysCLILexerT__27        = 28
	FileSysCLILexerENBLANCO     = 29
	FileSysCLILexerLINE_COMMENT = 30
	FileSysCLILexerSTRING       = 31
	FileSysCLILexerQUOTED_TEXT_ = 32
)
